#!/usr/bin/perl

# Standard includes:
use Getopt::Long;
Getopt::Long::Configure(
			qw(
				bundling
				no_getopt_compat
				posix_default 
				no_ignore_case
				gnu_compat
			));
use POSIX ":sys_wait_h";

# Local program includes
use SyncDiff::Config;
use SyncDiff::Scanner;
use SyncDiff::DB;
use SyncDiff::File;
use SyncDiff::Scanner;
use SyncDiff::Server;
use SyncDiff::Client;

# Debugging includes
use Data::Dumper;

## End includes

# Setup things:
$main::VERSION = '0.01';

sub display_help {
	print "Right now, there is no helping anyone.\n";
	print "If you are running this you had better be John 'Warthog9' Hawley\n";
}

#
# Run something
#

# Setup the argument handling, can't do much
# till we've procssed all of that
my $config_file;
my $run_as_server;
my $get_version;
my $get_help;
my $run_only_scan;
GetOptions (
		"c|config=s"	=> \$config_file,      # string
		"s|server"	=> \$run_as_server,
		"scan"		=> \$run_only_scan,
		"v|version"	=> \$get_version,
		"h|?|help"	=> \$get_help,
	   );

print "Config File: ". $config_file ."\n";
print "Run as Server? ". $run_as_server ."\n";
print "Get Version? ". $get_version ."\n";

if( $get_version ){
	print "Version: ". $main::VERSION ."\n";
	exit(0);
}

if( $get_help ){
	display_help();
	exit(0);
}

#
# Load up the Configuration file
#

if( ! defined $config_file ){
	$config_file = "csync2.cfg";
}

#print "---------------------------\n";
#print "config file:\n";
#print "---------------------------\n";
#print Dumper $config_file;
#print "^^^^^^^^^^^^^^^^^^^^^^^^^^^\n";

my $config = SyncDiff::Config->new();

$config->read_config( $config_file );

# End opening and parsing the config file
# 	$config now exists and can be passed around
# 	as needed

my $dbconnection = SyncDiff::DB->new();

$dbconnection->file( "psync.sqlite" );

$dbconnection->connect_and_fork();

if( $run_only_scan ){
	SyncDiff::Scanner->full_scan( $config, $dbconnection );
	exit(0);
} # end if( $run_only_scan )

if( $run_as_server ){
	my $server = SyncDiff::Server->new( dbref => $dbconnection );
	$server->run();
	exit(0);
}

#print Dumper $config->config;

foreach $group_name ( keys $config->config->{groups} ){
	print "Main client loop - group: ". $group_name ."\n";

	foreach $base ( @{ $config->config->{groups}->{$group_name}->{patterns} } ){

		my $client = SyncDiff::Client->new( config_options => $config->get_group_config( $group_name ), group => $group_name, groupbase => $base, groupbase_path => $config->get_truepath( $base ), dbref => $dbconnection );

		$client->fork_and_connect();
	} # end base foreach
} # end group_name foreach

#my $config = SyncDiff::Config->new();
#
#$config->read_config('csync2.cfg');
